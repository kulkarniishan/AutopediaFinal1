{"version":3,"sources":["components/Chart/BarChart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","reportWebVitals.js","index.js"],"names":["BarChart","Alldata","color","randomBetween","min","max","Math","floor","random","data","labels","datasets","label","country","backgroundColor","borderColor","borderWidth","fill","options","responsive","maintainAspectRatio","legend","fontSize","CountryPicker","input","FormControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","value","Object","entries","map","App","state","SalesData","Global","console","log","setState","className","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA+CeA,EA3CE,SAACC,GAChB,IACIC,EADEC,EAAgB,SAACC,EAAKC,GAAN,OAAcD,EAAME,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,KAGhF,OADFF,EAAM,QAAQC,EAAc,EAAG,KAAK,IAAIA,EAAc,EAAG,KAAK,IAAIA,EAAc,EAAG,KAC1E,8BACG,8BACQ,cAAC,IAAD,CACAM,KAAM,CACFC,OAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAK,KAAM,MACtGC,SAAU,CACR,CACEC,MAAO,yBAA2BX,EAAQQ,KAAKI,QAC/CJ,KAAMR,EAAQQ,KAAKA,KACnBK,gBAAiB,CACfZ,EAAM,UAERa,YAAa,CACXb,EAAM,KAERc,YAAa,EACbC,MAAM,IAIVC,QAAS,CACLC,YAAY,EACZC,qBAAqB,IAG3BF,QAAS,CACPG,OAAQ,CACNX,OAAQ,CACNY,SAAU,a,0BClBzBC,EAfO,SAACC,GACnB,OACI,8BACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKL,EAAMM,oBAAoBD,EAAEE,OAAOC,QAAhF,UACA,wBAAQA,MAAM,SAAd,oBACEC,OAAOC,QAAQV,EAAMf,MAAM0B,KAAI,mCAAEtB,EAAF,iBACjC,wBAAuBmB,MAAOnB,EAA9B,SAAwCA,GAA1BA,c,QCsBTuB,E,4MAvBbC,MAAM,CACJ5B,KAAK6B,EAAUC,OACf1B,QAAQ,U,EAGViB,oBAAqB,SAACjB,GACpB2B,QAAQC,IAAI5B,GACZ,EAAK6B,SAAS,CAACjC,KAAK6B,EAAUzB,GAAUA,QAAQA,IAChD2B,QAAQC,IAAI,EAAKJ,Q,4CAGnB,WACA,OACE,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACA,cAAC,EAAD,CAAelC,KAAM6B,EAAWR,oBAAqBc,KAAKd,sBAC1D,cAAC,EAAD,CAAUrB,KAAMmC,KAAKP,iB,GAlBTQ,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,K","file":"static/js/main.02f6ff6a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\nconst BarChart = (Alldata)=> {\r\n  const randomBetween = (min, max) => min + Math.floor(Math.random() * (max - min + 1));\r\n  var color ='';\r\n  color='rgba('+randomBetween(0, 255)+','+randomBetween(0, 255)+','+randomBetween(0, 255)\r\n    return <div>\r\n              <div>{\r\n                      <Line \r\n                      data={{\r\n                          labels: [1950,1960,1970,1980,1990,1995, 2000,2005,2010,2011,2012,2013,2014, 2015,2016,2017,2018,2019, 2020],\r\n                          datasets: [\r\n                            {\r\n                              label: 'Vehicle production in ' + Alldata.data.country,\r\n                              data: Alldata.data.data,\r\n                              backgroundColor: [\r\n                                color+', 0.2)',\r\n                              ],\r\n                              borderColor: [\r\n                                color+')',\r\n                              ],\r\n                              borderWidth: 1,\r\n                              fill: true,\r\n                            },\r\n              \r\n                          ],\r\n                          options: {\r\n                              responsive: true, // Instruct chart js to respond nicely.\r\n                              maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height \r\n                            }\r\n                        }}\r\n                        options={{\r\n                          legend: {\r\n                            labels: {\r\n                              fontSize: 25,\r\n                            },\r\n                          },\r\n                            \r\n                        }}\r\n                      />\r\n                }\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default BarChart","import React from 'react'\r\nimport{NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nconst CountryPicker = (input)=> {\r\n    return (\r\n        <div>\r\n        <FormControl>\r\n          <NativeSelect defaultValue=\"\" onChange={(e)=>input.handleCountryChange(e.target.value)}>\r\n          <option value=\"Global\">Global</option>\r\n          { Object.entries(input.data).map(([country,values])=>\r\n          <option key= {country} value={country}>{country}</option>\r\n          )}\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\nimport './App.css'\nimport BarChart from './components/Chart/BarChart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport SalesData from './vehicleProduction.json';\n\n\nclass App extends React.Component{\n\n  state={\n    data:SalesData.Global,\n    country:'Global'\n  }\n\n  handleCountryChange =(country) =>{\n    console.log(country);\n    this.setState({data:SalesData[country], country:country}) \n    console.log(this.state)\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div className=\"chart\">\n      <CountryPicker data={SalesData} handleCountryChange={this.handleCountryChange}/>\n      <BarChart data={this.state}/>\n      </div>\n    </div>\n  );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}